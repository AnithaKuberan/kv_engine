#!/usr/bin/env python

import clitool
import sys

def stats_formatter(stats, prefix=" ", cmp=None):
    longest = max((len(x) + 2) for x in stats.keys())
    for stat, val in sorted(stats.items(), cmp=cmp):
        s = stat + ":"
        print "%s%s%s" % (prefix, s.ljust(longest), val)

def stats_vkey(mc, key, vb, username=None, password=''):
    if username:
        mc.sasl_auth_plain(username, password)
    cmd = "vkey %s %s" % (key, str(vb))
    vbs = mc.stats(cmd)
    print "verification for key", key
    stats_formatter(vbs)

def stats_all(mc, username=None, password=''):
    if username:
        mc.sasl_auth_plain(username, password)
    stats_formatter(mc.stats())

def stats_timings(mc, username=None, password=''):
    if username:
        mc.sasl_auth_plain(username, password)
    def timing_stat_cmp(a, b):
        def parts(x):
            xa = x.split('_')
            st = '_'.join(xa[0:-1])
            return st, int(xa[-1].split(',')[0])
        aname, asz = parts(a[0])
        bname, bsz = parts(b[0])
        if aname == bname:
            return cmp(asz, bsz)
        else:
            return cmp(aname, bname)
    stats_formatter(mc.stats('timings'), ' ', timing_stat_cmp)

def stats_tap(mc, username=None, password=''):
    if username:
        mc.sasl_auth_plain(username, password)
    stats_formatter(mc.stats('tap'))

def stats_hash(mc, username=None, password=''):
    if username:
        mc.sasl_auth_plain(username, password)
    stats_formatter(mc.stats('hash'))

if __name__ == '__main__':

    c = clitool.CliTool()

    c.addCommand('vkey', stats_vkey, 'vkey keyname vbid [username password]')
    c.addCommand('all', stats_all, 'all [username password]')
    c.addCommand('hash', stats_hash, 'hash [username password]')
    c.addCommand('tap', stats_tap, 'tap [username password]')
    c.addCommand('timings', stats_timings, 'tap [username password]')

    c.execute()
