#!/usr/bin/env python
# -*-python-*-

"""
Backup tool for Membase.

"""

import sys
import os
import subprocess

if len(sys.argv) < 3:
    sys.exit('usage: %prog [bucket_path_name] [dest_dir_path]\n' +
             'example:\n' +
             '  %prog /var/opt/membase/default /backups/2010-10-31/\n')

def backup(sqlite_path, srcdir, destdir, fn):
    if os.path.exists(fn):
        subprocess.Popen([sqlite_path, os.path.join(srcdir, fn),
                          '.backup \"%s\" ' % os.path.join(destdir, fn)])
        print "Backup of %s done" % fn
        subprocess.Popen([sqlite_path, os.path.join(destdir, fn),'vacuum'])
        print "Vacuum of %s done" % fn

def find_sqlite():
    candidates = ['./sqlite3',
                  './sqlite3.exe']
    for c in candidates:
        if os.path.exists(c):
            return c
    sys.exit("ERROR: Cannot find sqlite3 command.")

src_path, dest_path = sys.argv[1:]
sqlite_path = find_sqlite()

for n,p in [('src', src_path), ('dest', dest_path)]:
    if not os.path.exists(p):
        sys.exit("ERROR: %s does not exist at %s" % (n, p))

dirname, bucket_name = os.path.split(src_path)

backup(sqlite_path, dirname, dest_path, bucket_name)
for ext in ['.sqlite', '.mb']:
    for i in range(4):
        backup(sqlite_path, dirname, dest_path, '%s-%d.%s' % (bucket_name, i, ext))

